<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ahmed Hossam</title>
    
    
    
    <link>https://ahmedhosssam.github.io/</link>
    <description>Recent content on Ahmed Hossam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Aug 2025 12:18:42 +0300</lastBuildDate>
    
	<atom:link href="https://ahmedhosssam.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Tiger Book: 2 Lexical Analysis</title>
      <link>https://ahmedhosssam.github.io/posts/tiger_lexical_analysis/</link>
      <pubDate>Sun, 24 Aug 2025 12:18:42 +0300</pubDate>
      
      <guid>https://ahmedhosssam.github.io/posts/tiger_lexical_analysis/</guid>
      <description>
        
          
          
          
        
        
        
          The lexical analyzer (lexer) takes a stream of characters and produces a stream of names, keywords, and punctuation marks; it discards white space and comments between the tokens.
Lexical tokens have types in any programming language, example:
ID foo, x, n14 NUM 73, 0, 082 REAL 3.14, 10., 1e9, 0.5 COMMA , NOTEQ != LPAREN ( RPAREN ) Punctuation tokens such as IF, VOID , RETURN constructed from alphabetic characters are called reserved words and, in most languages, cannot be used as identifiers.
          
        
        </description>
    </item>
    
    <item>
      <title>The Tiger Book: 1 Introduction</title>
      <link>https://ahmedhosssam.github.io/posts/tiger_intro/</link>
      <pubDate>Wed, 20 Aug 2025 06:26:55 +0300</pubDate>
      
      <guid>https://ahmedhosssam.github.io/posts/tiger_intro/</guid>
      <description>
        
          
          
          
        
        
        
          A compiler is built from many modules (lexical analysis, parsing, semantic analysis, IR translation, optimization, code generation, etc). Each module does a specific job, but they must work together. The interfaces between them are just as critical as the algorithms inside the modules.
Any large software system is much easier to understand and implement if the designer takes care with the fundamental abstractions and interfaces.
For a compiler, it&amp;rsquo;s better to break it to many pieces (modules).
          
        
        </description>
    </item>
    
    <item>
      <title>How I Made ChatGPT Run on My Terminal without an API key?</title>
      <link>https://ahmedhosssam.github.io/posts/chatbang/</link>
      <pubDate>Mon, 18 Aug 2025 21:42:42 +0300</pubDate>
      
      <guid>https://ahmedhosssam.github.io/posts/chatbang/</guid>
      <description>
        
          
          
          
        
        
        
          I had a problem where I wanted to stop leaving the terminal and going to ChatGPT back and forth just for a quick question. For example: git commands, I always forget most of git commands and I want to ask ChatGPT how can I do something using git. Also to take a suggestion for how to do something using bash (write a bash script to replace every space with a &amp;lsquo;_&amp;rsquo; for all the files in that directory).
          
        
        </description>
    </item>
    
    <item>
      <title>Why I Quit Competitive Programming</title>
      <link>https://ahmedhosssam.github.io/posts/why-i-quit-competitive-programming/</link>
      <pubDate>Wed, 13 Aug 2025 19:41:41 +0300</pubDate>
      
      <guid>https://ahmedhosssam.github.io/posts/why-i-quit-competitive-programming/</guid>
      <description>
        
          
          
          
        
        
        
          TL;DR # I tried competitive programming for a whole year and it didn&amp;rsquo;t work out well for me, I didn&amp;rsquo;t enjoy it and didn&amp;rsquo;t achieve anything remarkable as well. So it&amp;rsquo;s better to take the L and move on and try other things I wanted to try, but I couldn&amp;rsquo;t because of competitive programming. For the rest of the article I&amp;rsquo;m going to talk about the sunk cost fallacy.
          
        
        </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://ahmedhosssam.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ahmedhosssam.github.io/about/</guid>
      <description>
        
          
          
          
        
        
        
          Hi, Iâ€™m Ahmed Hossam, a programmer, computer science student, chess fan, and aspiring engineer.
You can find me on:
Github Twitter (X) Youtube Linkedin 
          
        
        </description>
    </item>
    
  </channel>
</rss>